# 2013蟠桃记
"""
喜欢西游记的同学肯定都知道悟空偷吃蟠桃的故事，
你们一定都觉得这猴子太闹腾了，
其实你们是有所不知：悟空是在研究一个数学问题！
什么问题？他研究的问题是蟠桃一共有多少个！
不过，到最后，他还是没能解决这个难题，呵呵^-^
当时的情况是这样的：
第一天悟空吃掉桃子总数一半多一个，第二天又将剩下的桃子吃掉一半多一个，
以后每天吃掉前一天剩下的一半多一个，到第n天准备吃的时候只剩下一个桃子。
聪明的你，请帮悟空算一下，他第一天开始吃的时候桃子一共有多少个呢？
"""
n = int(input())
peach = 1  # 从最后一天剩下的一个桃子开始倒推
ans = 0  # 答案
for i in range(1,n):
    ans = 2*peach+2  # 倒推公式： 前一天的桃子数=2*当天桃子数+2
    a = ans
print(ans)

"""
这一题通过倒推思路得出
由题意得：
[前一天的桃子数]-[今天被吃掉的桃子]=[今天剩下的桃子数]
转化一下
a==前一天的桃子数，b=今天剩下的桃子数
a-(a/2+1)=b  通分化简  ---> a=2*b+2
然后用for循环进行倒推,有n天就倒推n天
在python中，循环for i in range(1,n)是从1到n-1的
但本题中最后一天（也就是第n天）是不吃桃子的，所以n+1
因此n+1-1直接抵消
"""